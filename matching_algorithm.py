##### 초기 데이터 생성시, 두 유저간 저장된 음식 데이터 매칭 방법######

# 아이템기반(Item-based CF) 은 실제 데이터에서 유저 수가 적거나 겹치는 아이템이 적어 유효한 데이터를 뽑아내기 힘들 때 거꾸로 
# 아이템을 기반으로 유사도를 구하는 기법이다.

####오토인코더 모델로인하여 유저개인이 선호하여 선택한 이미지 데이터를 기반으로 이와 유사한 데이터 이미지반환 ex)냉면=>could be 국수 메뉴반환될 수 있음 

#AI_hub의 한국음식 이미지는 각 음식 종류별로 딕셔너리화 되어있음.
#각 유저의 음식종류 = key로 구분 , 해당 음식 종류의 숫자는 = value
#각 value 포인트는 각 사용자가 모아온 데이터의 축적양을 나타냄 => 숫자가 높은수록 해당 종류음식을 많이 선택(선호)하여 그 값이 축적됨.
recommended_food1 = {
    '국':{'User1':11, 'User2':2},
    '구이':{'User1':7, 'User2':8},
    '밥':{'User1':1, 'User2':12}   
}
구이
user1 구이 7가지 메뉴선택 user2 8가지 구이메뉴선택한거고
구이 데이터전부가지고만 학습한 GAN모델이면
user1 삼겹살 user2 양꼬치 -> 융합된 이미지 in 구이 데이터셋
국 미역국(1) 된장국 .........
user1=0
i in for instaln:
try:
    if ok in preference db:

    user1+=1
    else 0

# recommended_food = {
#     'User1':{'국':11, '구이':2, '떡': 5, '밥':5},
#     'User2':{'국':7, '구이':8, '밥':2}
       
# }

# def sim_distance(data, name1, name2):
#     sum=0
#     for i in data[name1]:
#         if i in data[name2]: #같은 영화를 봤다면
#             sum+=pow(data[name1][i]- data[name2][i],2)
        
#     return 1/(1+sqrt(sum))


# def top_match(data, name, index=3, sim_function=sim_distance):
#     li=[]
#     for i in data:
#         if name!=i: #자기 자신은 제외한다
#             li.append((sim_function(data,name,i),i)) # 유사도, 이름을 튜플에 묶어 리스트에 추가한다
#     li.sort() #오름차순 정렬
#     li.reverse() #내림차순 정렬
    
#     return li[:index]






dic = []
for i in recommended_food:
    num1 = recommended_food.get(i).get('User1')- recommended_food.get(i).get('User2')
 
    dic.append({i:abs(num1)})
print(dic)#각 음식종류를 튜플화 하여 리스트로 반환 / 문제는 min(dic) 으로 최소값의 key를 불러오질 못했음. 
#위 알고리즘의 가장 큰 문제점은 2,1 도 최소값으로 선정될 수 있는데 이는 유사도가 1 이고 7,8의 유사도도 1이다. 그래서 해당 7,8의 구이를 반환하게끔해야하는데 모순이생겨버린다.
#이를 해결하기위한 포뮬라는 min으로 quatile 상위 30%리스트를 추출 후 선호음식종류 상위 리스트 중 sum 이 최대인 음식메뉴를 반환하는 방법론을 채택해 볼 수 있을 듯.

# 최종 추천 메뉴 종류가 구이로 선정됬을시에 각 유저의 구이메뉴 선정한 것 ex)User1=삼겹살 ,User2=불고기 이라면 Autoencoder를 통하여 두 이미지를 넣고
# 나온 이미지와 구이메뉴들 중 가장 유사한 이미지를 확률적으로 계산하여 가장 유사한(삼겹살 혹은 불고기가 될 수 있음) 이미지의 메뉴를 반환
# <유저가 쌓은 음식 데이터가 정말 혹여나 중복된게 하나라도 없을시에는 그냥 랜덤하게 음식 종류 선정(필터링 되어진 음식의 메뉴 제외)>
# <위와 같은 불상사를 대비하여 초반 유저가 직접 선호음식 선택할시에 메뉴종류별로 선택란을 나오게끔 조정. 이는 한 종류의 음식만 선택란에 나오는 상황을 예방차원.


#문제가 되는것은 추천할 기준이 되는 유저들의 다양성에서 기반할 만한 많은 데이터가 데이터베이스에 쌓이지 않아있고 
#중요한건 약속한사람들 끼리의 데이터이기에 이문제를 해결하고자.

#exponential recovery 개념....?
#클라우드서버에 db로 음식데이타셋올리는 것인지...? 올린다면 양식, 일식 및 중식 메뉴 열가지정도 크롤링해서 추가 가능하면 추가하기

#회원가입 로그인 등을 이용한 유저별 데이터베이스 저장은 민정님 플젝3 참조